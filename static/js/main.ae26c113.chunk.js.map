{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortAlphabet","sortLength","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getReadyGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,sBACfC,EAAa,iBAyBZ,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1BR,SAAuBC,EAAvB,GAAuD,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACnCI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRT,EACHI,EAAcJ,UACdI,EAMiBM,CAAcjB,EAAiB,CAAEK,YAAWE,YAEjE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYf,IAAcJ,IAC9BoB,QAAS,kBAAMf,EAAaL,IAJ9B,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYf,IAAcH,IAC9BmB,QAAS,kBAAMf,EAAaJ,IAJ9B,4BASA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAab,IACjBc,QAAS,WACPb,EAAWD,EAAU,GAAK,QAC1BD,EAAaD,IANjB,sBAYEA,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,EAAW,KALf,sBAcJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae26c113.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortAlphabet = 'Sort alphabetically';\nconst sortLength = 'Sort by length';\n\nfunction getReadyGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case sortAlphabet:\n          return good1.localeCompare(good2);\n\n        case sortLength:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reverse\n    ? preparedGoods.reverse()\n    : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState('');\n  const visibleGoods = getReadyGoods(goodsFromServer, { sortField, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== sortAlphabet })}\n          onClick={() => setSortField(sortAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== sortLength })}\n          onClick={() => setSortField(sortLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !reverse })}\n          onClick={() => {\n            setReverse(reverse ? '' : 'true');\n            setSortField(sortField);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}